/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.27
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.0.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Common_Response_Error.h
 *
 * Generic Error Message
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Common_Response_Error_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Common_Response_Error_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Generic Error Message
/// </summary>
class  Common_Response_Error
    : public ModelBase
{
public:
    Common_Response_Error();
    virtual ~Common_Response_Error();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Common_Response_Error members

    /// <summary>
    /// More detail about the error
    /// </summary>
    utility::string_t getSErrorMessage() const;
    bool sErrorMessageIsSet() const;
    void unsetSErrorMessage();

    void setSErrorMessage(const utility::string_t& value);


protected:
    utility::string_t m_SErrorMessage;
    bool m_SErrorMessageIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Common_Response_Error_H_ */
